TML {

Exp
  = TMLLocalizedStrings
 
// Comments
comment
  = "//" (~"\n" any)* --single
  | "/*" (~"*/" any)* "*/" --multiple
  
space
  += comment

TMLLocalizedStrings
  = ((~TMLLocalizedString any)* TMLLocalizedString)+ (~TMLLocalizedString any)*


// TMLLocalizedString* expression
TMLLocalizedString
  = Macro "(" StringObject ("," ListOf<Args, ",">)* ")" space* ";"*

  
Macro
  = "TMLLocalizedString"
  | "TMLLocalizedAttributedString"
  | "TMLLocalizedDate"
  | "TMLLocalizedAttributedDate"


// TMLLocalized argument expression
Args
  = Null | Literal | Object | MessageSend | CollectionAccess | Property | Variable


// Null Expression
Null
  = "nil"
  | "NULL"

CollectionAccess
  = Property "[" Args "]"
  | Variable "[" Args "]"
  
Property
  = Variable ("." Variable)*

Variable
  = #(validVarChar+)
  
validVarChar
  = ~( "[" | "]" | ":" | "," | "." | ")" | "(" | space) any

// Literal Objects
Literal
  = NumberLiteral
  | StringLiteral
  
Object
  = StringObject
  | NumberObject
  | Dict
  | Array
  | LiteralWrap
  
// Literal Wrap @(WHATEVER)
LiteralWrap
  = "@(" Variable ")"
  

// Numbers
NumberLiteral
  = digit+

NumberObject
  = "@" NumberLiteral

// Strings
StringObject
  = "@" StringLiteral ("@"? StringLiteral)*

StringLiteral
  = "\"" stringChars "\""

stringChars
  = stringChar*

stringChar
  = "\\\""
  | ~"\"" any


// Dictionary
Dict
  = "@{" ListOf<DictEntry, ","> "}"
  
DictEntry
  = StringObject ":" DictValue
  
DictValue
  = Args


// Array
Array
  = "@[" ListOf<ArrayEntry, ","> "]"

ArrayEntry
  = Args


// Message Send
MessageSend
  = NoArgumentMessageSend
  | ArgumentMessageSend
  
NoArgumentMessageSend
  = "[" Receiver NoArgumentMessage "]"

ArgumentMessageSend
  = "[" Receiver (ArgumentMessage Args)+ "]"
  
Receiver
  = MessageComponent
  
NoArgumentMessage
  = MessageComponent
  
ArgumentMessage
  = MessageComponent ":"

MessageComponent
  = #(messageComponentChar+)

messageComponentChar
  = ~("["|"]"|":"|space) any

}