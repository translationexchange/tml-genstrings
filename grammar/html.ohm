HTML <: Base {

// OVERRIDES
comment
  := startComment (~endComment any)* endComment
  
startComment
  = "<" space * "!" space* "--" space*

endComment
  = "--" space* ">"
  
Arg
  := Method | Object | Property | Variable | Literal
  
stringNonLiteral
  := "{{" | "}}"
  
TMLLocalizedString
  := HTMLTagWithContent<"tml-tr", TMLLocalizedTagContent> --tmlTag
  | HTMLTagWithAttribute<HTMLTagName, TRLAttributeExp> --trlInAttr
  | HTMLTagWithAttribute<HTMLTagName, TMLAttributeExp> --tmlInAttr
  | HTMLTagWithAttributeAndContent<HTMLTagName, "tml-tr", TMLLocalizedTagContent> --markedTag
  | HTMLTagWithContent<HTMLTagName, TRLExp> --trlInTag

// END OF OVERRIDES

TMLLocalizedTagContent
  = TRLExp --trl
  | (TagStringChar | NonTMLTag)+
  
TRLAttributeExp
  = HTMLTagAttributeName "=" QuotedTRLExp
  
TMLAttributeExp
  = "tml-tr" "=" (QuotedTRLExp | StringLiteral)
  
NonTMLAttribute
  = ~"tml-tr" HTMLTagAttributeExp

NonTMLTag
  = "<" HTMLTagName NonTMLAttribute* ">" TMLLocalizedTagContent HTMLCloseAnyTag
  
TagStringChar
  = ~("<" | CodeMarkup) any
  
// Special Markup
CodeMarkup
  = "{{" (~"}}" any)* "}}"

// TRL
QuotedTRLExp
  = "\"" TRLExp "\""
  | "'" TRLExp "'"

TRLExp
  = "{{" (TRLMethod | TRLFilter) "}}"
  
TRLMethod
  = "trl" "(" StringLiteral ")"
  
TRLFilter
  = StringLiteral "|" "trl" (":" ArgExp)? ( "|" FilterName)*
 
FilterName
  = Variable
  
Object
  = Dict
  | Array
  
Dict
 = "{" ListOf<DictEntry, ","> "}"
  
DictEntry
  = (StringLiteral | Variable) ":" ArgExp
  
Array
  = "[" ListOf<ArgExp, ","> "]"

}