tr('1. Hello')
tr('2. {actor} give you {count} apples', {'actor':Gender.female('Маша'),'count':2}, 'apples')
tr('3. [link]{actor}[/link] give [b]you[/b] {count} apples', {'actor':Gender.female('Маша'),'count':2, 'link':{'href':'http://site.com'}}, 'apple', {'link':{'href':'http://site.com'}})
tr('4. {user.name} give you {count} apples', {'user': DummyUser('Маша', gender='female'), 'count': 2}, 'check method')
tr('5. [link]{user.name}[/link] {user|дал,дала} [b]тебе[/b] {count||яблоко,яблока}', {'user': DummyUser('Маша', gender='female'), 'count': 1, 'link': {'href': 'http://site.com'}}, 'check method token decorated')
few_apples = tr('6. {count|apple,apples}',{'count':22})
self.assertEquals('apple', tr('7. {count|apple,apples}',{'count':1}), 'Use one from fallback')
self.assertEquals(label, tr(label), 'Use fallback source for en')
self.assertEquals('Never translated', tr('9. Never translated'), 'Never tranlated parent fallback')
self.assertEquals('2 bananas', tr('10 {count||banana,bananas}',{'count':2}), 'Use fallback rules')

tr("11. Double \"quotes\"")
tr("12. Double \"quotes\"", "12. Comment")
tr("13. %(variable) and %(another)")
tr("14. Concatenated " + "string", "14. Concatenated" + " comment")